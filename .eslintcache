[{"/home/afif-firdaus/Documents/Glints Academy/mini-pro/src/Components/PaginationComp.js":"1","/home/afif-firdaus/Documents/Glints Academy/mini-pro/src/Components/NavbarComp.js":"2"},{"size":2196,"mtime":1609233901184,"results":"3","hashOfConfig":"4"},{"size":6828,"mtime":1609233901148,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1m0g8k3",{"filePath":"8","messages":"9","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/afif-firdaus/Documents/Glints Academy/mini-pro/src/Components/PaginationComp.js",[],"/home/afif-firdaus/Documents/Glints Academy/mini-pro/src/Components/NavbarComp.js",["10","11","12","13","14","15"],{"ruleId":"16","severity":1,"message":"17","line":24,"column":8,"nodeType":"18","messageId":"19","endLine":24,"endColumn":13},{"ruleId":"16","severity":1,"message":"20","line":35,"column":9,"nodeType":"18","messageId":"19","endLine":35,"endColumn":13},{"ruleId":"16","severity":1,"message":"21","line":54,"column":11,"nodeType":"18","messageId":"19","endLine":54,"endColumn":22},{"ruleId":"22","severity":1,"message":"23","line":63,"column":13,"nodeType":"24","endLine":105,"endColumn":4},{"ruleId":"22","severity":1,"message":"25","line":78,"column":22,"nodeType":"26","endLine":78,"endColumn":49},{"ruleId":"27","severity":1,"message":"28","line":114,"column":17,"nodeType":"29","endLine":118,"endColumn":18},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'buttonLabel' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'userName' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]